package com.storm.tornadoai.logic

/**
 * Minimal, dependency-free bias scorer so ChatRepository can compile.
 * You can swap this out later for something smarter.
 */
class BiasClassifier {

    data class BiasResult(
        val label: Label,
        val leftScore: Double,
        val rightScore: Double,
        val neutrality: Double
    )

    enum class Label { LEFT, RIGHT, NEUTRAL, UNKNOWN }

    /** Very simple keyword/phrase heuristic. Returns a label + scores in [0..1]. */
    fun classify(text: String?): BiasResult {
        if (text.isNullOrBlank()) {
            return BiasResult(Label.UNKNOWN, 0.0, 0.0, 1.0)
        }

        val t = text.lowercase()

        // tweak/expand these lists anytime
        val leftHints = listOf(
            "universal healthcare", "climate crisis", "wealth tax",
            "social justice", "gun control", "labor union", "equity"
        )
        val rightHints = listOf(
            "border security", "2a", "second amendment", "tax cuts",
            "school choice", "america first", "pro life", "lower taxes"
        )

        val leftHits = leftHints.count { it in t }
        val rightHits = rightHints.count { it in t }

        val total = (leftHits + rightHits).coerceAtLeast(1)
        val leftScore = leftHits.toDouble() / total
        val rightScore = rightHits.toDouble() / total
        val neutrality = if (leftHits == 0 && rightHits == 0) 1.0 else 0.0

        val label = when {
            leftHits == 0 && rightHits == 0 -> Label.NEUTRAL
            leftScore > rightScore + 0.15 -> Label.LEFT
            rightScore > leftScore + 0.15 -> Label.RIGHT
            else -> Label.NEUTRAL
        }

        return BiasResult(label, leftScore, rightScore, neutrality)
    }
}